!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/icedwolf/dotfiles/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210905.0/
$FZF_DEFAULT_COMMAND	init.vim	/^let $FZF_DEFAULT_COMMAND = 'ag -g ""'$/;"	v
.autocomplete.*	zsh/zsh-autocomplete/.vscode/settings.json	/^                ".autocomplete.*": "shellscript"$/;"	s	object:files.associations
<C-o>	init.vim	/^map <C-o> :NERDTreeToggle<cr>$/;"	m
<SPACE>	init.vim	/^nnoremap <SPACE> <Nop>$/;"	m
<esc>	init.vim	/^map <esc> :noh<cr>$/;"	m
<leader><C-f>	init.vim	/^map <leader><C-f> :Rg<cr>$/;"	m
<leader>F	init.vim	/^map <leader>F :FZF~<cr>$/;"	m
<leader>f	init.vim	/^map <leader>f :FZF<cr>$/;"	m
<leader>g	init.vim	/^map <leader>g :GFiles<cr>$/;"	m
<leader>o	init.vim	/^nmap <leader>o :NERDTreeFind<CR>$/;"	m
<tab>	init.vim	/^inoremap <expr><tab> pumvisible() ? "\\<c-n>" : "\\<tab>"$/;"	m
Author	zsh/zsh-autocomplete/README.md	/^## Author$/;"	s	chapter:`zsh-autocomplete`
EXAMPLES	z/z.1	/^.SH EXAMPLES$/;"	s	title:Z
Environment	zsh/zsh-autocomplete/.github/ISSUE_TEMPLATE/bug-report.md	/^## Environment$/;"	s
History menu	zsh/zsh-autocomplete/README.md	/^### History menu$/;"	S	section:`zsh-autocomplete`""Other Features
How should it work?	zsh/zsh-autocomplete/.github/ISSUE_TEMPLATE/feature_request.md	/^## How should it work?$/;"	s
Install	zsh/prompt/readme.md	/^## Install$/;"	s	chapter:Purification
Installing & Updating	zsh/zsh-autocomplete/README.md	/^## Installing & Updating$/;"	s	chapter:`zsh-autocomplete`
Key Bindings	zsh/zsh-autocomplete/README.md	/^## Key Bindings$/;"	s	chapter:`zsh-autocomplete`
License	zsh/prompt/readme.md	/^## License$/;"	s	chapter:Purification
License	zsh/zsh-autocomplete/README.md	/^## License$/;"	s	chapter:`zsh-autocomplete`
Live history search	zsh/zsh-autocomplete/README.md	/^### Live history search$/;"	S	section:`zsh-autocomplete`""Other Features
Manual installation	zsh/zsh-autocomplete/README.md	/^### Manual installation$/;"	S	section:`zsh-autocomplete`""Installing & Updating
Multi-selection	zsh/zsh-autocomplete/README.md	/^### Multi-selection$/;"	S	section:`zsh-autocomplete`""Other Features
NERDTreeShowHidden	init.vim	/^let NERDTreeShowHidden=1$/;"	v
Optimized completion config	zsh/zsh-autocomplete/README.md	/^### Optimized completion config$/;"	S	section:`zsh-autocomplete`""Other Features
Other Features	zsh/zsh-autocomplete/README.md	/^## Other Features$/;"	s	chapter:`zsh-autocomplete`
Other Frameworks/Plugin Managers	zsh/zsh-autocomplete/README.md	/^### Other Frameworks\/Plugin Managers$/;"	S	section:`zsh-autocomplete`""Installing & Updating
Overview	zsh/prompt/readme.md	/^## Overview$/;"	s	chapter:Purification
Purification	zsh/prompt/readme.md	/^# Purification$/;"	c
Recent dirs completion	zsh/zsh-autocomplete/README.md	/^### Recent dirs completion$/;"	S	section:`zsh-autocomplete`""Other Features
Requirements	zsh/zsh-autocomplete/README.md	/^## Requirements$/;"	s	chapter:`zsh-autocomplete`
Steps to reproduce	zsh/zsh-autocomplete/.github/ISSUE_TEMPLATE/bug-report.md	/^## Steps to reproduce$/;"	s
Troubleshooting	zsh/zsh-autocomplete/README.md	/^## Troubleshooting$/;"	s	chapter:`zsh-autocomplete`
What do you want?	zsh/zsh-autocomplete/.github/ISSUE_TEMPLATE/feature_request.md	/^## What do you want?$/;"	s
Who else would benefit from this?	zsh/zsh-autocomplete/.github/ISSUE_TEMPLATE/feature_request.md	/^## Who else would benefit from this?$/;"	s
Why do you want this?	zsh/zsh-autocomplete/.github/ISSUE_TEMPLATE/feature_request.md	/^## Why do you want this?$/;"	s
Why?	zsh/prompt/readme.md	/^### Why?$/;"	S	section:Purification""Overview
Z	z/z.1	/^.TH "Z" "1" "January 2013" "z" "User Commands"$/;"	t
_z	z/z.sh	/^_z() {$/;"	f
_z_dirs	z/z.sh	/^    _z_dirs () {$/;"	f
_z_precmd	z/z.sh	/^            _z_precmd() {$/;"	f
_z_zsh_tab_completion	z/z.sh	/^    _z_zsh_tab_completion() {$/;"	f
`zsh-autocomplete`	zsh/zsh-autocomplete/README.md	/^# `zsh-autocomplete`$/;"	c
b:prettier_ft_default_args	init.vim	/^let b:prettier_ft_default_args = {$/;"	v
common	z/z.sh	/^            function common(matches) {$/;"	f
dotfiles	README.md	/^# dotfiles$/;"	c
files.associations	zsh/zsh-autocomplete/.vscode/settings.json	/^        "files.associations": {$/;"	o
frecent	z/z.sh	/^            function frecent(rank, time) {$/;"	f
g:deoplete#enable_at_startup	init.vim	/^let g:deoplete#enable_at_startup=1$/;"	v
g:python3_host_prog	init.vim	/^let g:python3_host_prog = '\/usr\/sbin\/python3'$/;"	v
g:python_host_prog	init.vim	/^let g:python_host_prog = '\/usr\/bin\/python2'$/;"	v
g:user_emmet_settings	init.vim	/^let g:user_emmet_settings = {$/;"	v
mapleader	init.vim	/^let mapleader = "\\<Space>"$/;"	v
numbertoggle	init.vim	/^augroup numbertoggle$/;"	a
output	z/z.sh	/^            function output(matches, best_match, common) {$/;"	f
p	init.vim	/^xnoremap p pgvy$/;"	m
readme	z/Makefile	/^readme:$/;"	t
